steps:
  # Download and install Terragrunt
  - name: "gcr.io/cloud-builders/wget"
    args:
      - -O
      - /workspace/terragrunt
      - "https://github.com/gruntwork-io/terragrunt/releases/download/v0.69.13/terragrunt_linux_amd64"
    id: "download-terragrunt"

  # Make Terragrunt executable
  - name: "ubuntu"
    args: ["chmod", "+x", "/workspace/terragrunt"]
    id: "prepare-terragrunt"

  # Install gsutil and prepare workspace
  - name: "gcr.io/google.com/cloudsdktool/google-cloud-cli:alpine"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        # Show current paths for debugging
        echo "Showing paths:"
        which gsutil
        which gcloud
        ls -la /google-cloud-sdk

        # Create directories
        mkdir -p /workspace/google-cloud-sdk/bin
        mkdir -p /workspace/google-cloud-sdk/platform

        # Copy the executables
        cp $(which gsutil) /workspace/google-cloud-sdk/bin/
        cp $(which gcloud) /workspace/google-cloud-sdk/bin/

        # Copy the platform-specific files
        cp -r /google-cloud-sdk/platform/gsutil /workspace/google-cloud-sdk/platform/
        cp -r /google-cloud-sdk/lib /workspace/google-cloud-sdk/

  # Run Terragrunt apply-all
  - name: "hashicorp/terraform:1.6"
    entrypoint: "sh"
    secretEnv: ["GITHUB_TOKEN"]
    args:
      - "-c"
      - |
        apk add --no-cache \
          curl \
          git \
          bash \
          jq \
          wget \
          tar \
          gzip \
          python3 \
          py3-pip \
          py3-crcmod

        # Add gsutil to PATH and set environment variables
        export PATH="/workspace/google-cloud-sdk/bin:$${PATH}"
        export CLOUDSDK_PYTHON=/usr/bin/python3
        export PYTHONPATH=/workspace/google-cloud-sdk/platform/gsutil

        # Verify gsutil installation
        echo "Testing gsutil..."
        gsutil --version

        # Configure Git to use GITHUB_TOKEN
        git config --global url."https://oauth2:$${GITHUB_TOKEN}@github.com".insteadOf "https://github.com"

        # Export the token so terragrunt can access it
        export GITHUB_TOKEN="$${GITHUB_TOKEN}"

        cd environments/stable
        /workspace/terragrunt run-all apply --terragrunt-non-interactive
    id: "terragrunt-apply"

options:
  logging: CLOUD_LOGGING_ONLY

timeout: "1200s" # 20 minute timeout

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/github_token/versions/latest
      env: "GITHUB_TOKEN"
